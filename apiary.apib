FORMAT: 1A
HOST: http://www.google.com

# MyApi Test API
Notes API is a *short texts saving* service similar to its physical paper presence on your table. hh

# MyAPI API root [/]
API entry point.
This resource does not have any attributes. Instead it offers the initial API affordances in the form of the HTTP Link header and haveL links.

## Retrieve Entry Point [GET]
Retrieve entry point here

+ Response 200 (application/json)
    + Headers
    
            Link: <http:/api.gistfox.com/>;rel="self",<http:/api.gistfox.com/gists>;rel="gists"
     
    + Body
    
            {
                "_links": {
                    "self": { "href": "/" },
                    "gists": { "href": "/gists?{since}", "templated": true }
                }
            }


# Group Notes
Notes related resources of the **Notes API** HEHEHE

## Note [/note/{id}]
A single Gist object. The Gist resource is the central resource in the Gist Fox API. It represents one paste - a single text note.

The Gist resource has the following attributes:

- id
- created_at
- description
- content

The states *id* and *created_at* are assigned by the Gist Fox API at the moment of creation.

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Gist in the form of a hash.

+ Model (application/hal+json)

    HAL+JSON representation of Gist Resource. In addition to representing its state in the JSON form it offers affordances in the form of the HTTP Link header and HAL links.

    + Headers

            Link: <http:/api.gistfox.com/gists/42>;rel="self", <http:/api.gistfox.com/gists/42/star>;rel="star"

    + Body

            {
                "_links": {
                    "self": { "href": "/gists/42" },
                    "star": { "href": "/gists/42/star" },
                },
                "id": "42",
                "created_at": "2014-04-14T02:15:15Z",
                "description": "Description of Gist",
                "content": "String contents"
                "TEST":"HEHEH"
            }
            
### Retrieve a single Note [GET]
+ Response 200 (application/json)

    [Note][]

### Edit a Gist [PUT]
To update a Gist send a JSON with updated value for one or more of the Gist resource attributes. All attributes values (states) from the previous version of this Gist are carried over by default if not included in the hash.

+ Request (application/json)

        {
            "content": "Updated file contents"
        }

+ Response 200

    [Note][]

### Delete a Gist [DELETE]
+ Response 204


## Notes Collection [/notes]
some text here
### List all Notes [GET]
another text yada yada
+ Response 200 (application/json)

        [{
          "id": 1, "title": "Jogging in park"
        }, {
          "id": 2, "title": "Pick-up posters from post-office"
        }]

### Create a Note [POST]
+ Request (application/json)

        { "title": "Buy cheese and bread for breakfast." }

+ Response 201 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }
